global:
  runner:
    os_image: ubuntu

tasks:
#  check-vulvs:
##    runner: razorci/python:3.9
#    steps:
#    - checkout
#    ## use https://github.com/pypa/advisory-database for security vulnerabilities
#    - commands: 
#      - export PATH="$(python3 -m site --user-base)/bin:$PATH"
#      - python3 -m pip install pip-audit
#      - pip-audit -r requirements.txt --aliases --desc -f json | python3 -m json.tool
#    ### use pipenv inbuilt checks (PyUp Safety security vulnerabilities)
#    - commands:
#      - pipenv sync
#      - pipenv check -i 70612

#  run-tmate:
#    # use a Linux-VM runner
#    runner: 
#      os_image: ubuntu 
#    # define the steps to execute
#    steps:
#      # clone the git repo
#      - checkout
#      # make tmate.sh executable
#      - run: chmod +x tmate.sh
#      # run tmate.sh
#      - run: ./tmate.sh

  unit-tests:
    runner: razorci/python:3.9
#    runner:
#      os_image: ubuntu
    steps:
    - checkout
    ## restore cache for faster builds
    - cache/pull: pip-deps-{{ checksum "requirements.txt" }}
      
    - commands: 
#        timeout: 3599
        - python3 step.py 
#      - pip install -r requirements.txt --user
#    - commands:
#      - python test.py
#      - export PATH="$(python3 -m site --user-base)/bin:$PATH"
#      # generate coverage reports
#      - coverage run test.py
#      - coverage report && coverage html
#    - cache/push:
#        key: pip-deps-{{ checksum "requirements.txt" }}
#        paths:
#        - ~/.cache/pip
#    - reports/junit: test-reports/*.xml
#    - reports/html: 
#        dir: htmlcov
